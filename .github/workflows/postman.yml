name: Run Postman Tests with Newman

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  newman-run:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: authentication_db
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js 18
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run SQL Script
        env:
          PGPASSWORD: postgres
        run: |
          psql -h localhost -U postgres -d authentication_db -f ./sql/schema.sql  

      - name: Start API Server
        run: |
          node app.js &  
          sleep 10

      - name: Wait for API server to be ready
        run: |
          until curl -s http://localhost:3000/health; do echo "Waiting for API..."; sleep 5; done

      - name: Run Postman collection with Newman
        run: |
          npx newman run Authentication_database.postman_collection.json













# name: Run Postman Tests with Newman

# on:
#   push:
#     branches:
#       - master
#   pull_request:
#     branches:
#       - master

# jobs:
#   newman-run:
#     runs-on: ubuntu-latest

#     services:
#       postgres:
#         image: postgres:latest
#         env:
#           POSTGRES_DB: authentication_db
#           POSTGRES_PASSWORD: postgres
#           POSTGRES_USER: postgres
#         ports:
#           - 5432:5432
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: "22.12.0"

#       - name: Install dependencies
#         run: npm install

#       - name: Run database migrations
#         run: npx sequelize-cli db:migrate 

#       - name: Start API Server
#         run: |
#           node app.js &  
#           sleep 10

#       - name: Run Postman collection with Newman
#         run: |
#           npx newman run Authentication_database.postman_collection.json
















# # name: Run Postman Tests with Newman

# # on:
# #   push:
# #     branches:
# #       - master
# #   pull_request:
# #     branches:
# #       - master

# # jobs:
# #   newman-run:
# #     runs-on: ubuntu-latest

# #     services:
# #       postgres:
# #         image: postgres:latest
# #         env:
# #           POSTGRES_DB: authentication_db
# #           POSTGRES_PASSWORD: postgres
# #           POSTGRES_USER: postgres
# #         ports:
# #           - 5432:5432
# #         # Set health checks to wait until postgres has started
# #         options: >-
# #           --health-cmd pg_isready
# #           --health-interval 10s
# #           --health-timeout 5s
# #           --health-retries 5

# #     steps:
# #       - name: Checkout code
# #         uses: actions/checkout@v2

# #       - name: Set up Node.js
# #         uses: actions/setup-node@v3
# #         with:
# #           node-version: "22.12.0"

# #       - name: Install dependencies
# #         run: npm install

# #       - name: Start API Server
# #         run: |
# #           node app.js &  
# #           sleep 10

# #       # Step 5: Run Postman collection with Newman
# #       - name: Run Postman collection with Newman
# #         run: |
# #           npx newman run Authentication_database.postman_collection.json
